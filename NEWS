Bowtie: an Ultrafast, Lightweight Short Read Aligner

Bowtie NEWS
===========

   Bowtie is now available for download.  0.9.0 is the first version to
be released under the OSI Artistic License (see `COPYING') and freely
available to the public for download.  The current version is 0.9.1.
The Bowtie project is still in its early stages, and anyone interested
in improving this project is strongly encouraged to contact us. See the
project website (http://bowtie-bio.sf.net) for more details.

Reporting Issues
================

Please report any issues using the Sourceforge bug tracker:

  https://sourceforge.net/tracker/?group_id=236897&atid=1101606

Version Release History
=======================

Version 0.9.5 - September 26, 2008
   * Last column of output now additionally reports the reference and
     query bases (in that order) for mismatches.  E.g., old: "30,32",
     new: "30:C>A,32:C>T".
   * Eliminated spurious trailing space in first column of output.
   * Minor performance and sensitivity improvements
   * New option '-p' spawns a user-specified number of pthreads for
     parallel processing of reads.  For example, use '-p 4' to run
     'bowtie' on 4 processor cores simultaneously.
   * Due to the new '-p' option, 'bowtie' needs pthreads to compile and
     run.  To compile 'bowtie' without pthreads support (which disables
     the '-p' option), use 'make BOWTIE_PTHREADS=0'.
   * New option '--fast' causes Bowtie to load both the "forward" and
     "mirror" halves of the index at once, which eliminates the need
     for multiple phases and speeds up matching at the cost of using
     about twice as much memory.  '--fast' also causes 'bowtie' to
     scale better when used in combination with '-p'.
   * Fixed crashing bug with -o/--offrate in 'bowtie'.
   * Improved error reporting

Version 0.9.4 - September 16, 2008
   * New method for handling gaps and ambiguity codes in the reference.
     New 'bowtie-build' method handles long stretches of gaps
     gracefully.  New 'bowtie' rejects alignments that overlap a gap or
     ambiguous character in the reference.
   * Due to above change, index file format has been changed.  All
     pre-built indexes available on this site have been updated to the
     new format.  To obtain indexes with the old format, contact us.
   * In 'bowtie' unnamed reads are now given ordinal names (rather than
     "default") in the alignment output.  Works for all input modes.
   * New 'bowtie' input mode: Raw, activated with -r.  Expects one read
     sequence per line; no quality values or names.
   * Fixed 'bowtie' bug whereby trimming did not work in -c mode.
   * Changed 'bowtie-build' default to not use blockwise mode.
   * Changed 'bowtie-build' to avoid certain infinite-loop and very-
     long-runtime scenarios.
   * Packaging improvements: archives now explode into subdirectories
     and scripts are executable.

Version 0.9.3 - September 6, 2008
   * Major reference-name bug fixes to bowtie-convert

Version 0.9.2 - September 4, 2008
   * Now allows 3-mismatches: -n and -v options accept 3
   * Output format prints reference name instead of id in third column
   * Pre-built indexes updated to encode reference names
   * Ns in reads now match nothing (previously, they matched As/Ts)
   * Dropped -l/--linerate and -i/--linesperside arguments to bowtie-
     build
   * Fixed bug in Maq-like mode that allowed some poor alignments
   * Minor speed improvements

Version 0.9.1 - August 25, 2008
   * Integrated relevant SeqAn-1.1 sources into Bowtie source release
   * Now builds on Windows under MinGW (needs pthreads and zlib)
   * Binary releases for Linux (i386, x86_64), Windows (i386) and MacOS
     X (i386)

Version 0.9.0 - August 18, 2008
   * First stable release of Bowtie.
   * Includes the three core Bowtie tools: the indexer 'bowtie-build',
     the read aligner 'bowtie' and the converter from Bowtie's to Maq's
     mapping output format, 'bowtie-convert'.
   * Compatible pre-built indexes for many model organisms are
     available from http://bowtie-bio.sf.net.
   * FASTA, FASTQ inputs supported; tested with Solexa FASTQ
   * Supports Maq alignment policy (-n and -e behave as in Maq)
   * Supports X-mismatch policy (-v option behaves as in SOAP)
   * -n and -v options accept 0, 1, or 2
