Bowtie: an Ultrafast, Lightweight Short Read Aligner

Bowtie NEWS
===========

   Bowtie is now available for download.  0.9.0 is the first version to
be released under the OSI Artistic License (see `COPYING') and freely
available to the public for download.  The current version is 0.9.8.
The Bowtie project is still in its early stages, and anyone interested
in improving this project is strongly encouraged to contact us. See the
project website (http://bowtie-bio.sf.net) for more details.

Reporting Issues
================

Please report any issues using the Sourceforge bug tracker:

  https://sourceforge.net/tracker/?group_id=236897&atid=1101606

Version Release History
=======================

Version 0.9.8 - November 25, 2008
   * --unfa/--unfq <filename> options cause bowtie to dump unaligned
     reads to FASTA and/or FASTQ files.
   * bowtie-build now selects its memory-efficiency parameters (--bmax,
     --dcv, --packed) automatically by default.  New -a option disables
     this, yielding old behavior.
   * bowtie-build-packed is no longer a separate binary.  Supplying the
     new -p/--packed argument to bowtie-build is the new equivalent.
   * New tool bowtie-maptool converts between Bowtie's output formats.
   * New tool bowtie-inspect recreates reference strings from Bowtie
     index.
   * Renamed bowtie-convert to bowtie-maqconvert for clarity.
   * New universal Mac binary combines i386 & x86_64 binaries.  PowerPC
     still not supported.
   * Fixed memory leaks in bowtie.
   * Switched to a new scheme for mapping positions in "joined"
     reference string to positions in original strings.  This changes
     the index format.  bowtie-build's --pmap parameter reverts to the
     old format.  Versions of bowtie prior to 0.9.8 cannot search
     indexes produced by the bowtie-build 0.9.8 unless bowtie-build is
     run with --pmap.  bowtie 0.9.8 can search either index format.

Version 0.9.7.1 - November 11, 2008
   * Fixed an issue that caused a spurious loss of sensitivity between
     Bowtie versions 0.9.6 and 0.9.7 in certain modes.  Many thanks to
     Ali Mortazavi for bringing this to our attention.

Version 0.9.7 - November 8, 2008
   * Added new reporting option -m <int> which suppresses all
     alignments for a particular read if more than <int> reportable
     alignments exist for it.
   * Threads now buffer all alignments for a particular read/phase then
     output all alignments in one critical section.  This guarantees
     that all alignments for a given read/phase appear in one
     consecutive block of the output, even when multiple threads are
     operating in parallel. 
   * Separated the quality-conversion and parsing aspects of the old
     --solexa-quals argument into separate arguments: --solexa-quals
     (quality conversion) and --integer-quals (parsing).
   * bowtie-convert now handles the new (post-0.7.0) Maq alignment
     format.  The new format allows Maq tools to handle reads up to
     127 bases, whereas the old format was limited to 63 bases.  Added
     a -o option to opt for the old Maq format. 
   * New --refout argument sends alignments to a set of files named
     refXXXXX.map, where XXXXX is the 0-padded index of the reference
     sequence aligned to.  Useful for dealing with large datasets
     aligned to, e.g., the assembled human genome.
   * Improved tutorial to use a simple simulated read set (included)
     to do SNP calls with Maq.
   * Added --nota option to bowtie-build
   * Fixed make_h_sapiens_asm.sh script to include mitochondrial DNA.

Version 0.9.6 - October 10, 2008
   * 'bowtie' now supports a host of options that allow the user to
     specify which and how many valid alignments to report per read.
     The default is still to report 1 "good" alignment, which is by far
     the fastest mode.  See -k/-a/--best/--nostrata options described
     in the manual for details.
   * 'bowtie' now supports reads up to 1024 bases long.  Note that for
     reads much longer than, say, 35 bases, the user must be careful to
     set alignment policy parameters (especially -e) appropriately.
   * --fast flag eliminated, double-index mode is now the default.
     Added the -z/--phased flag to revert to phased, half-index mode.
   * --concise output mode now officially supported.  Now outputs one
     alignment per line.
   * Changed 'bowtie-build' default back to --bmaxdivn 4.
   * -h/--help now prints much more verbose help for 'bowtie' and
     'bowtie-build' (verbatim from MANUAL file)
   * BWT-searching code streamlined; much old code eliminated

Version 0.9.5 - September 27, 2008
   * Last column of output now additionally reports the reference and
     query bases (in that order) for mismatches.  E.g., old: "30,32",
     new: "30:C>A,32:C>T".
   * Eliminated spurious trailing space in first column of output.
   * Minor performance and sensitivity improvements.
   * New option '-p' spawns a user-specified number of pthreads for
     parallel processing of reads.  For example, use '-p 4' to run
     'bowtie' on 4 processor cores simultaneously.
   * Due to the new '-p' option, 'bowtie' needs pthreads to compile and
     run.  To compile 'bowtie' without pthreads support (which disables
     the '-p' option), use 'make BOWTIE_PTHREADS=0'.
   * Also due to '-p' option, the Windows version of Bowtie now comes
     with the pthreadGC2.dll file from the pthreads for Win32 project
     (http://sourceware.org/pthreads-win32).  This library is released
     under the LGPL license.
   * New option '--fast' causes Bowtie to load both the "forward" and
     "mirror" halves of the index at once, which eliminates the need
     for multiple phases and speeds up matching at the cost of using
     about twice as much memory.  '--fast' also causes 'bowtie' to
     scale better when used in combination with '-p'.
   * Fixed crashing bug with -o/--offrate in 'bowtie'.
   * Improved error reporting.

Version 0.9.4 - September 16, 2008
   * New method for handling gaps and ambiguity codes in the reference.
     New 'bowtie-build' method handles long stretches of gaps
     gracefully.  New 'bowtie' rejects alignments that overlap a gap or
     ambiguous character in the reference.
   * Due to above change, index file format has been changed.  All
     pre-built indexes available on this site have been updated to the
     new format.  To obtain indexes with the old format, contact us.
   * In 'bowtie' unnamed reads are now given ordinal names (rather than
     "default") in the alignment output.  Works for all input modes.
   * New 'bowtie' input mode: Raw, activated with -r.  Expects one read
     sequence per line; no quality values or names.
   * Fixed 'bowtie' bug whereby trimming did not work in -c mode.
   * Changed 'bowtie-build' default to not use blockwise mode.
   * Changed 'bowtie-build' to avoid certain infinite-loop and very-
     long-runtime scenarios.
   * Packaging improvements: archives now explode into subdirectories
     and scripts are executable.

Version 0.9.3 - September 6, 2008
   * Major reference-name bug fixes to bowtie-convert

Version 0.9.2 - September 4, 2008
   * Now allows 3-mismatches: -n and -v options accept 3
   * Output format prints reference name instead of id in third column
   * Pre-built indexes updated to encode reference names
   * Ns in reads now match nothing (previously, they matched As/Ts)
   * Dropped -l/--linerate and -i/--linesperside arguments to bowtie-
     build
   * Fixed bug in Maq-like mode that allowed some poor alignments
   * Minor speed improvements

Version 0.9.1 - August 25, 2008
   * Integrated relevant SeqAn-1.1 sources into Bowtie source release
   * Now builds on Windows under MinGW (needs pthreads and zlib)
   * Binary releases for Linux (i386, x86_64), Windows (i386) and MacOS
     X (i386)

Version 0.9.0 - August 18, 2008
   * First stable release of Bowtie.
   * Includes the three core Bowtie tools: the indexer 'bowtie-build',
     the read aligner 'bowtie' and the converter from Bowtie's to Maq's
     mapping output format, 'bowtie-convert'.
   * Compatible pre-built indexes for many model organisms are
     available from http://bowtie-bio.sf.net.
   * FASTA, FASTQ inputs supported; tested with Solexa FASTQ
   * Supports Maq alignment policy (-n and -e behave as in Maq)
   * Supports X-mismatch policy (-v option behaves as in SOAP)
   * -n and -v options accept 0, 1, or 2
