%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp/gplot.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jul 15 01:11:10 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 700 M
63 0 V
5849 0 R
-63 0 V
630 700 M
( 150) Rshow
1.000 UL
LTb
714 787 M
31 0 V
5881 0 R
-31 0 V
714 874 M
31 0 V
5881 0 R
-31 0 V
714 961 M
31 0 V
5881 0 R
-31 0 V
714 1048 M
31 0 V
5881 0 R
-31 0 V
714 1136 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 200) Rshow
1.000 UL
LTb
714 1223 M
31 0 V
5881 0 R
-31 0 V
714 1310 M
31 0 V
5881 0 R
-31 0 V
714 1397 M
31 0 V
5881 0 R
-31 0 V
714 1484 M
31 0 V
5881 0 R
-31 0 V
714 1571 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 250) Rshow
1.000 UL
LTb
714 1658 M
31 0 V
5881 0 R
-31 0 V
714 1745 M
31 0 V
5881 0 R
-31 0 V
714 1832 M
31 0 V
5881 0 R
-31 0 V
714 1920 M
31 0 V
5881 0 R
-31 0 V
714 2007 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 300) Rshow
1.000 UL
LTb
714 2094 M
31 0 V
5881 0 R
-31 0 V
714 2181 M
31 0 V
5881 0 R
-31 0 V
714 2268 M
31 0 V
5881 0 R
-31 0 V
714 2355 M
31 0 V
5881 0 R
-31 0 V
714 2442 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 350) Rshow
1.000 UL
LTb
714 2529 M
31 0 V
5881 0 R
-31 0 V
714 2616 M
31 0 V
5881 0 R
-31 0 V
714 2704 M
31 0 V
5881 0 R
-31 0 V
714 2791 M
31 0 V
5881 0 R
-31 0 V
714 2878 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 400) Rshow
1.000 UL
LTb
714 2965 M
31 0 V
5881 0 R
-31 0 V
714 3052 M
31 0 V
5881 0 R
-31 0 V
714 3139 M
31 0 V
5881 0 R
-31 0 V
714 3226 M
31 0 V
5881 0 R
-31 0 V
714 3313 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 450) Rshow
1.000 UL
LTb
714 3400 M
31 0 V
5881 0 R
-31 0 V
714 3488 M
31 0 V
5881 0 R
-31 0 V
714 3575 M
31 0 V
5881 0 R
-31 0 V
714 3662 M
31 0 V
5881 0 R
-31 0 V
714 3749 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 500) Rshow
1.000 UL
LTb
714 3836 M
31 0 V
5881 0 R
-31 0 V
714 3923 M
31 0 V
5881 0 R
-31 0 V
714 4010 M
31 0 V
5881 0 R
-31 0 V
714 4097 M
31 0 V
5881 0 R
-31 0 V
714 4184 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 550) Rshow
1.000 UL
LTb
714 4272 M
31 0 V
5881 0 R
-31 0 V
714 4359 M
31 0 V
5881 0 R
-31 0 V
714 4446 M
31 0 V
5881 0 R
-31 0 V
714 4533 M
31 0 V
5881 0 R
-31 0 V
714 4620 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 600) Rshow
1.000 UL
LTb
6282 700 M
0 63 V
0 -203 R
(Whole Human) Cshow
6282 420 M
(2.87 Gbases) Cshow
1.000 UL
LTb
4976 700 M
0 63 V
0 -203 R
(1/2 Human) Cshow
4976 420 M
(1.44 Gbases) Cshow
1.000 UL
LTb
3670 700 M
0 63 V
0 -203 R
(1/4 Human) Cshow
3670 420 M
(718 Mbases) Cshow
1.000 UL
LTb
2364 700 M
0 63 V
0 -203 R
(1/8 Human) Cshow
2364 420 M
(359 Mbases) Cshow
1.000 UL
LTb
1058 700 M
0 63 V
0 -203 R
(1/16 Human) Cshow
1058 420 M
(180 Mbases) Cshow
1.000 UL
LTb
6626 700 M
-63 0 V
714 700 M
63 0 V
5933 0 R
( 150) Lshow
1.000 UL
LTb
6626 1136 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 200) Lshow
1.000 UL
LTb
6626 1571 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 250) Lshow
1.000 UL
LTb
6626 2007 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 300) Lshow
1.000 UL
LTb
6626 2442 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 350) Lshow
1.000 UL
LTb
6626 2878 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 400) Lshow
1.000 UL
LTb
6626 3313 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 450) Lshow
1.000 UL
LTb
6626 3749 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 500) Lshow
1.000 UL
LTb
6626 4184 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 550) Lshow
1.000 UL
LTb
6626 4620 M
-63 0 V
-5849 0 R
63 0 V
5933 0 R
( 600) Lshow
1.000 UL
LTb
1.000 UL
LTb
714 700 M
5912 0 V
0 3920 R
-5912 0 R
714 700 L
LTb
140 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Running time \(CPU seconds\)) Cshow
grestore
LTb
3670 70 M
(Reference genome length \(bases\)) Cshow
LTb
3670 4830 M
(Running time to map 2M simulated reads onto various genome lengths) Cshow
1.000 UP
1.300 UP
2.000 UL
LT6
LTb
5975 4487 M
(35bp reads, exact matching) Rshow
LT6
6059 4487 M
399 0 V
1058 1258 M
1306 26 V
1306 8 V
1306 26 V
1306 35 V
1058 1258 Box
2364 1284 Box
3670 1292 Box
4976 1318 Box
6282 1353 Box
6258 4487 Box
1.300 UP
2.000 UL
LT6
LTb
5975 4347 M
(30bp reads, exact matching) Rshow
LT6
6059 4347 M
399 0 V
1058 1388 M
1306 26 V
1306 53 V
1306 17 V
1306 35 V
1058 1388 Circle
2364 1414 Circle
3670 1467 Circle
4976 1484 Circle
6282 1519 Circle
6258 4347 Circle
1.300 UP
2.000 UL
LT6
LTb
5975 4207 M
(25bp reads, exact matching) Rshow
LT6
6059 4207 M
399 0 V
1058 1310 M
1306 8 V
1306 27 V
1306 34 V
1306 53 V
1058 1310 TriD
2364 1318 TriD
3670 1345 TriD
4976 1379 TriD
6282 1432 TriD
6258 4207 TriD
1.300 UP
2.000 UL
LT6
LTb
5975 4067 M
(35bp reads, 1-mismatch matching) Rshow
LT6
6059 4067 M
399 0 V
1058 2651 M
1306 105 V
1306 139 V
1306 157 V
1306 148 V
1058 2651 BoxF
2364 2756 BoxF
3670 2895 BoxF
4976 3052 BoxF
6282 3200 BoxF
6258 4067 BoxF
1.300 UP
2.000 UL
LT6
LTb
5975 3927 M
(30bp reads, 1-mismatch matching) Rshow
LT6
6059 3927 M
399 0 V
1058 2373 M
1306 78 V
1306 192 V
1306 183 V
1306 226 V
1058 2373 CircleF
2364 2451 CircleF
3670 2643 CircleF
4976 2826 CircleF
6282 3052 CircleF
6258 3927 CircleF
1.300 UP
2.000 UL
LT6
LTb
5975 3787 M
(25bp reads, 1-mismatch matching) Rshow
LT6
6059 3787 M
399 0 V
1058 2512 M
1306 244 V
1306 270 V
1306 244 V
1306 279 V
1058 2512 TriDF
2364 2756 TriDF
3670 3026 TriDF
4976 3270 TriDF
6282 3549 TriDF
6258 3787 TriDF
1.000 UL
LTb
714 700 M
5912 0 V
0 3920 R
-5912 0 R
714 700 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
